// device specific
$buildDevice: buildDevice();
$mobileDevice: mobile;
$desktopDevice: desktop;
$tabletDevice: tablet;

// These MIN and MAX values are useful
// when doing media queries for (min-width:[width]) and (max-width:[width])
// rather than having susy calculate it with @include at-breakpoint(cols)
// using 0.01em in case user settings has more pixels per em's
$one-pixel-in-ems: 1em / 16;
$no-break: $total-columns;

$large-break-max: 100000em;
$large-break-min: ($large-break * $column-width) + ($gutter-width * ($large-break - 1));// + ($grid-padding * 2);

$medium-break-max: $large-break-min;// - $one-pixel-in-ems;
$medium-break-min: ($medium-break * $column-width) + ($gutter-width * ($medium-break - 1));// + ($grid-padding * 2);

$small-break-max: $medium-break-min;// - $one-pixel-in-ems;
$small-break-min: ($small-break * $column-width) + ($gutter-width * ($small-break - 1));// + ($grid-padding * 2);

$no-break-max: $small-break-min;// - $one-pixel-in-ems;
$no-break-min: 0em;


///////////////////////////////////////////////////////////////////////////////////////////

// from-breakpoint mix group start
@mixin from-breakpoint($breaks-or-classes...){
	@each $itm in $breaks-or-classes{
    	@if( $buildDevice == $mobileDevice )
    	{
            @include private-from-breakpoint-mobile($itm){ @content; }
        }
        @else if( $buildDevice == $tabletDevice )
        {
            @include private-from-breakpoint-tablet($itm){ @content; }
        }
        @else if( $buildDevice == $desktopDevice )
        {
            @include private-from-breakpoint-all($itm){ @content; }
        }
        @else
        {
            @include private-from-breakpoint-all($itm){ @content; }
        }
	}
}

@mixin private-from-breakpoint-mobile($itm){
    @if( $itm == $no-break )
    {
        @content;
    }
    @else if( $itm == $small-break )
    {
    }
    @else if( $itm == $medium-break )
    {
    }
    @else if( $itm == $large-break )
    {
    }
    @else
    {
    }
}

@mixin private-from-breakpoint-tablet($itm){
    @if( $itm == $no-break )
    {
    }
    @else if( $itm == $small-break )
    {
        @media (min-width: $small-break-min){ @content; }
    }
    @else if( $itm == $medium-break )
    {
        @media (min-width: $medium-break-min){ @content; }
    }
    @else if( $itm == $large-break )
    {
    }
    @else
    {
    }
}

@mixin private-from-breakpoint-all($itm){
    @if( $itm == $no-break )
    {
        @media (min-width: $no-break-min){ @content; }
    }
    @else if( $itm == $small-break )
    {
        @media (min-width: $small-break-min){ @content; }
    }
    @else if( $itm == $medium-break )
    {
        @media (min-width: $medium-break-min){ @content; }
    }
    @else if( $itm == $large-break )
    {
        @media (min-width: $large-break-min){ @content; }
    }
    @else
    {
        .#{$itm}{ @content; }
    }
}

// from-breakpoint mix group end






// to-breakpoint mix group start
@mixin to-breakpoint($breaks-or-classes...){
	@each $itm in $breaks-or-classes{
		@if( $buildDevice == $mobileDevice )
		{
            @include private-to-breakpoint-mobile($itm){ @content; }
        }
        @else if( $buildDevice == $tabletDevice )
        {
            @include private-to-breakpoint-tablet($itm){ @content; }
        }
        @else if( $buildDevice == $desktopDevice )
        {
            @include private-to-breakpoint-desktop($itm){ @content; }
        }
        @else
        {
            @include private-to-breakpoint-all($itm){ @content; }
        }
	}
}

@mixin private-to-breakpoint-all($itm){
    @if( $itm == $no-break )
    {
        @media (max-width: $no-break-max){ @content; }
    }
    @else if( $itm == $small-break )
    {
        @media (max-width: $small-break-max){ @content; }
    }
    @else if( $itm == $medium-break )
    {
        @media (max-width: $medium-break-max){ @content; }
    }
    @else if( $itm == $large-break )
    {
        @media (max-width: $large-break-max){ @content; }
    }
    @else
    {
        .#{$itm}{ @content; }
    }
}

@mixin private-to-breakpoint-mobile($itm){
    @if( $itm == $no-break )
    {
        @content;
    }
    @else if( $itm == $small-break )
    {
        @content;
    }
    @else if( $itm == $medium-break )
    {
        @content;
    }
    @else if( $itm == $large-break )
    {
        @content;
    }
    @else
    {
    }
}

@mixin private-to-breakpoint-tablet($itm){
    @if( $itm == $no-break )
    {
    }
    @else if( $itm == $small-break )
    {
        @media (max-width: $small-break-max){ @content; }
    }
    @else if( $itm == $medium-break )
    {
        @media (max-width: $medium-break-max){ @content; }
    }
    @else if( $itm == $large-break )
    {
        @media (max-width: $large-break-max){ @content; }
    }
    @else
    {
    }
}

@mixin private-to-breakpoint-desktop($itm){
    @if( $itm == $no-break )
    {
    }
    @else if( $itm == $small-break )
    {
    }
    @else if( $itm == $medium-break )
    {
    }
    @else if( $itm == $large-break )
    {
        @media (max-width: $large-break-max){ @content; }
    }
    @else
    {
        .#{$itm}{ @content; }
    }
}
// to-breakpoint mix group end






// in-breakpoint mix group start
@mixin in-breakpoint($breaks-or-classes...){

    @each $itm in $breaks-or-classes{

        @if( $buildDevice == $mobileDevice )
        {
            @include private-in-breakpoint-mobile($itm){ @content; }
        }
        @else if( $buildDevice == $tabletDevice )
        {
            @include private-in-breakpoint-tablet($itm){ @content; }
        }
        @else if( $buildDevice == $desktopDevice )
        {
            @include private-in-breakpoint-desktop($itm){ @content; }
        }
        @else
        {
            @include private-in-breakpoint-all($itm){ @content; }
        }

    }

}

@mixin private-in-breakpoint-all($itm){
    @if( $itm == $no-break ){
        @media
            (min-width: $no-break-min) and
            (max-width: $no-break-max){
            @content;
        }
    }
    @else if( $itm == $small-break )
    {
        @media
            (min-width: $small-break-min) and
            (max-width: $small-break-max){
            @content;
        }
    }
    @else if( $itm == $medium-break )
    {
        @media
            (min-width: $medium-break-min) and
            (max-width: $medium-break-max){
            @content;
        }
    }
    @else if( $itm == $large-break )
    {
        @media
            (min-width: $large-break-min) and
            (max-width: $large-break-max){
            @content;
        }
    }
    @else
    {
        .#{$itm}{
            @content;
        }
    }
}

@mixin private-in-breakpoint-mobile($itm){
    @if( $itm == $no-break ){
        @content;
    }
    @else if( $itm == $small-break )
    {
    }
    @else if( $itm == $medium-break )
    {
    }
    @else if( $itm == $large-break )
    {
    }
    @else
    {
    }
}

@mixin private-in-breakpoint-tablet($itm){
    @if( $itm == $no-break ){
    }
    @else if( $itm == $small-break )
    {
        @media
            (min-width: $small-break-min) and
            (max-width: $small-break-max){
            @content;
        }
    }
    @else if( $itm == $medium-break )
    {
        @media
            (min-width: $medium-break-min) and
            (max-width: $medium-break-max){
            @content;
        }
    }
    @else if( $itm == $large-break )
    {
    }
    @else
    {
    }
}

@mixin private-in-breakpoint-desktop($itm){
    @if( $itm == $no-break ){
    }
    @else if( $itm == $small-break )
    {
    }
    @else if( $itm == $medium-break )
    {
    }
    @else if( $itm == $large-break )
    {
        @media
            (min-width: $large-break-min) and
            (max-width: $large-break-max){
            @content;
        }
    }
    @else
    {
        .#{$itm}{
            @content;
        }
    }
}
// in-breakpoint mix group end
